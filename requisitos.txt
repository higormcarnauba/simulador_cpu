Implementar um programa que simule a execução de instruções mostradas na tabela de decodificação fornecida na Seção 4.
Considere que o processador possui 16 bits e os registradores R0-R7, PC, IR, SP e FLAGS.

Arquitetura - Processador 16 Bits
Instuções - 26 instruções
Registradores - 0 a 7, PC, IR, SP e FLAGS

Entrada - Arquivo de texto, com todas as instruções que vão ser executas
Tudo em Hexadecimal, ex: 0x0000

O arquivo representa a memória do programa
Cada linha corresponde a um endereço com alinhamento de 16 bits (em Hexa)
Formato - <endereço>:<conteúdo>

Condição de Pare
Instrução HALT -
Instução de Formato indefinito -
Fim do Arquivo

No fim do Arquivo deve-se apresentar o conteúdo (em Hexa) dos:
    Registradores
    0 a 7, PC e SP

    Memória de dados
    Nesse formato: <endereço>:<conteúdo>
    (Mostrando só as memórias usadas pelo código)

    Pilha
    Nesse formato: <endereço>:<conteúdo>
    Assuma que o ponteiro de pilha com o valor inicial de 0x8200 e que pilha possui tamanho de 16 bytes (Sei o que significa não)

    Flags
    Valores finais (0 ou 1)
    Flags: C (Carry), Ov (Overflow), Z(Zero), S(Não lembro)

    Sempre que ocorrer um NOP, o simulador tem que exibir as informações acima